cscope 15 $HOME/workspace/alg/src/sort -q 0000000092 0000009540
	@/home/tgni/workspace/alg/src/sort/bubblesort.c

1 
	~<¡dlib.h
>

2 
	~<¡dio.h
>

3 
	~<¡ršg.h
>

4 
	$´št_¬¿y
(
a
[], 
n
)

6 
i
;

7 
i
=0; i<
n
; i++)

8 
	`´štf
("%d ", 
a
[
i
]);

9 
	`´štf
("\n");

10 
	}
}

12 
	$sw­
(*
a
, *
b
)

14 
p
;

15 
p
 = *
a
;

16 *
a
 = *
b
;

17 *
b
 = 
p
;

18 
	}
}

20 
	$bubbË_sÜt
(
a
[], 
n
)

22 
i
, 
j
;

23 
i
=0; i<
n
-1; i++)

24 
j
=1; j<
n
-
i
; j++)

25 ià(
a
[
j
-1] >‡[j])

26 
	`sw­
(&
a
[
j
-1], &a[j]);

28 
	}
}

30 
	$maš
()

32 
A
[] = {22, 14, 17, 5, 6, 10, 19, 13, 32, 21};

33 
	`´št_¬¿y
(
A
, 10);

34 
	`bubbË_sÜt
(
A
, 10);

35 
	`´št_¬¿y
(
A
, 10);

36 
	}
}

	@/home/tgni/workspace/alg/src/sort/countingsort.c

1 
	~<¡dio.h
>

2 
	~<ty³s.h
>

	@/home/tgni/workspace/alg/src/sort/heapsort.c

1 
	~<¡dio.h
>

2 
	~"ty³s.h
"

8 
	#PARENT
(
i
è
	`mod_ûžšg
(i, 2)

	)

9 
	#LEFT
(
i
è(2 * (i))

	)

10 
	#RIGHT
(
i
è(2 * (iè+ 1)

	)

12 
	$max_h—pify
(
št32_t
 
a
[], iÁ32_ˆ
i
, iÁ32_ˆ
h—psize
)

14 
l
, 
r
, 
Ïrge¡
;

16 
l
 = 
	`LEFT
(
i
);

17 
r
 = 
	`RIGHT
(
i
);

19 ià(
l
 <ð
h—psize
 && 
a
[l] >‡[
i
])

20 
Ïrge¡
 = 
l
;

22 
Ïrge¡
 = 
i
;

23 ià(
r
 <ð
h—psize
 && 
a
[r] >‡[
Ïrge¡
])

24 
Ïrge¡
 = 
r
;

26 ià(
Ïrge¡
 !ð
i
) {

27 
	`sw­
(
a
[
i
],‡[
Ïrge¡
]);

28 
	`max_h—pify
(
a
, 
Ïrge¡
, 
h—psize
);

32 
	}
}

35 
	$bužd_max_h—p
(
št32_t
 
a
[], iÁ32_ˆ
Ëngth
)

37 
št32_t
 
h—psize
, 
i
;

39 
h—psize
 = 
Ëngth
;

41 
i
 = 
	`mod_æoÜ
(
Ëngth
, 2); i >= 1; --i)

42 
	`max_h—pify
(
a
, 
i
, 
h—psize
);

45 
	}
}

48 
	$h—p_sÜt
(
št32_t
 
a
[], iÁ32_ˆ
Ëngth
)

50 
št32_t
 
i
, 
h—psize
 = 
Ëngth
;

52 
	`bužd_max_h—p
(
a
, 
Ëngth
);

54 
i
 = 
Ëngth
; i >= 2; --i) {

55 
	`sw­
(
a
[1],‡[
i
]);

56 
h—psize
--;

57 
	`max_h—pify
(
a
, 1, 
h—psize
);

61 
	}
}

64 
	$´št_¬¿y
(
št32_t
 
a
[], iÁ32_ˆ
Ëngth
)

66 
št32_t
 
i
;

68 
i
 = 1; i <ð
Ëngth
; ++i)

69 
	`´štf
("%d ", 
a
[
i
]);

70 
	`´štf
("\n");

71 
	}
}

74 
	$maš
()

77 
št32_t
 
a
[] = {0, 1, 14, 10, 8, 7, 9, 3, 2, 4, 16};

78 
št32_t
 
Ëngth
;

80 
Ëngth
 = (
a
è/ (
št32_t
) - 1;

81 
	`´št_¬¿y
(
a
, 
Ëngth
);

82 
	`h—p_sÜt
(
a
, 
Ëngth
);

83 
	`´št_¬¿y
(
a
, 
Ëngth
);

86 
	}
}

	@/home/tgni/workspace/alg/src/sort/quicksort.c

1 
	~<¡dio.h
>

2 
	~"ty³s.h
"

4 
PrštA¼ay
(
št32_t
 
a
[], iÁ32_ˆ
Ëngth
, iÁ32_ˆ
i
, iÁ32_ˆ
p
, iÁ32_ˆ
j
, iÁ32_ˆ
r
);

6 
št32_t
 
	$P¬t™iÚ
(
št32_t
 
a
[], iÁ32_ˆ
low
, iÁ32_ˆ
high
)

24 
št32_t
 
pivÙ
 = 
A
[
low
];

26 
low
 < 
high
) {

27 
low
 < 
high
 && 
A
[high] >ð
pivÙ
) --high;

28 
A
[
low
] = A[
high
];

29 
low
 < 
high
 && 
A
[low] <ð
pivÙ
) ++low;

30 
A
[
high
] = A[
low
];

34  
i
+1;

35 
	}
}

37 
	$QuickSÜt
(
št32_t
 
a
[], iÁ32_ˆ
low
, iÁ32_ˆ
high
)

39 
št32_t
 
p
;

41 ià(
low
 < 
high
) {

42 
p
 = 
	`P¬t™iÚ
(
a
, 
low
, 
high
);

43 
	`QuickSÜt
(
a
, 
low
, 
p
-1);

44 
	`QuickSÜt
(
a
, 
p
+1, 
high
);

48 
	}
}

50 
	$PrštA¼ay
(
št32_t
 
a
[], iÁ32_ˆ
Ëngth
, iÁ32_ˆ
i
, iÁ32_ˆ
p
, iÁ32_ˆ
j
, iÁ32_ˆ
r
)

52 
št32_t
 
idx
;

54 
idx
 = 1; idx <ð
Ëngth
; ++idx)

55 
	`´štf
("%d ", 
a
[
idx
]);

56 
	`´štf
(" i:%d…:%d j:%d„:%d\n", 
i
, 
p
, 
j
, 
r
);

59 
	}
}

62 
	$maš
()

64 
št32_t
 
a
[] = {46, 79, 56, 38, 40, 84};

65 
št32_t
 
Ëngth
;

67 
Ëngth
 = (
a
è/ (
št32_t
) - 1;

68 
	`QuickSÜt
(
a
, 1, 
Ëngth
);

71 
	}
}

	@/home/tgni/workspace/alg/src/sort/sort.c

1 
	~<¡dio.h
>

2 
	~<¡dlib.h
>

4 
	$š£¹iÚ_sÜt
(
a
[], 
N
)

6 
i
, 
j
, 
tmp
;

8 
i
 = 1; i < 
N
; ++i) {

9 
tmp
 = 
a
[
i
];

10 
j
 = 
i
; j > 0 && 
a
[j - 1] > 
tmp
; j--)

11 
a
[
j
] =‡[j - 1];

12 
a
[
j
] = 
tmp
;

14 
	}
}

16 
	$´št_¬¿y
(
a
[], 
N
)

18 
i
;

20 
i
 = 0; i < 
N
; ++i) {

21 
	`´štf
("%d ", 
a
[
i
]);

23 
	`´štf
("\n");

24 
	}
}

26 
	#SENTINEL
 (~0)

	)

29 
	$maš
()

31 
a
[] = {4, 2, 3, 6, 5, 9, 8, 1, 0};

32 
N
 = (
a
)/();

34 
	`´št_¬¿y
(
a
, 
N
);

35 
	`š£¹iÚ_sÜt
(
a
, 
N
);

36 
	`´št_¬¿y
(
a
, 
N
);

39 
	}
}

	@/home/tgni/workspace/alg/src/sort/types.h

10 #iâdeà
_TYPES_H


11 
	#_TYPES_H


	)

14 
	tBOOLEAN
;

15 
	tINT8U
;

16 sigÃd 
	tINT8S
;

17 
	tINT16U
;

18 sigÃd 
	tINT16S
;

19 
	tINT32U
;

20 sigÃd 
	tINT32S
;

21 
	tFP32
;

22 
	tFP64
;

24 
	tINT64S
;

25 
	tINT64U
;

28 
	tulÚg_t
;

29 
	tušt32_t
;

30 
	tušt16_t
;

31 
	tušt8_t
;

34 
	tlÚg_t
;

35 
	tšt32_t
;

36 
	tšt16_t
;

37 sigÃd 
	tšt8_t
;

40 
	#htÚs
(
n
è((
ušt16_t
)((Òè& 0xffè<< 8è| ((Òè& 0xff00è>> 8))

	)

41 
	#htÚl
(
n
è((
ušt32_t
)( \

42 (((
ušt32_t
)(
n
) & (uint32_t)0x000000ffUL) << 24) | \

43 (((
ušt32_t
)(
n
) & (uint32_t)0x0000ff00UL) << 8) | \

44 (((
ušt32_t
)(
n
) & (uint32_t)0x00ff0000UL) >> 8) | \

45 (((
ušt32_t
)(
n
è& (ušt32_t)0xff000000ULè>> 24)))

	)

46 
	#Áohs
(
n
è
	`htÚs
Ò)

	)

47 
	#Áohl
(
n
è
	`htÚl
Ò)

	)

50 
	#__i¤__


	)

51 
	#__¶c_wq__


	)

52 
	#__tmr__


	)

55 
	#DISPLAY_MSG
 0

	)

57 
	#DISABLE
 0

	)

58 
	#ENABLE
 1

	)

60 
	#MAX
(
a
,
b
è(×è>ð(bè? (aè: (b))

	)

61 
	#MIN
(
a
,
b
è(×è<ð(bè? (aè: (b))

	)

62 
	#US_SWAP
(
a
è(×èð(
INT16U
)(((INT16U)×è>> 8è| ((INT16U)×è<< 8)))

	)

63 
	#mod_ûžšg
(
a
, 
b
è((×è+ (bè- 1è/ (b))

	)

64 
	#mod_æoÜ
(
a
, 
b
è(×è/ (b))

	)

66 #iâdeà
NULL


67 
	#NULL
 0

	)

70 #iâdeà
TRUE


71 
	#TRUE
 (1 =ð1)

	)

74 #iâdeà
FALSE


75 
	#FALSE
 (!
TRUE
)

	)

78 #iâdeà
OK


79 
	#OK
 0

	)

82 #iâdeà
ERROR


83 
	#ERROR
 -1

	)

86 
__šlše__
 
	$¥l™_wr™e_two
(
ušt8_t
 *
addr
, 
ušt16_t
 
two
, ušt8_ˆ
’dŸn
)

88 
ušt8_t
 
by‹0
, 
by‹1
;

90 
by‹0
 = (
two
 & 0xff);

91 
by‹1
 = (
two
 & 0xff00) >> 8;

93 ià(
’dŸn
) {

94 *
addr
 = 
by‹1
;

95 *(
addr
+1èð
by‹0
;

97 *
addr
 = 
by‹0
;

98 *(
addr
+1èð
by‹1
;

102 
	}
}

104 
	#¥l™_»ad_two
(
addr
, 
’dŸn
) \

105 ((
’dŸn
) ? \

106 (
ušt16_t
)((*(
addr
) << 8) | (*(addr+1))) : \

107 (
ušt16_t
)((*(
addr
)è| (*×ddr+1è<< 8)))

	)

109 
__šlše__
 
	$¥l™_wr™e_four
(
ušt8_t
 *
addr
, 
ušt32_t
 
four
, ušt8_ˆ
’dŸn
)

111 
ušt8_t
 
by‹0
, 
by‹1
, 
by‹2
, 
by‹3
;

113 
by‹0
 = (
four
 & 0xff);

114 
by‹1
 = (
four
 & 0xff00) >> 8;

115 
by‹2
 = (
four
 & 0xff0000) >> 16;

116 
by‹3
 = (
four
 & 0xff000000) >> 24;

118 ià(
’dŸn
) {

119 *
addr
 = 
by‹3
;

120 *(
addr
+1èð
by‹2
;

121 *(
addr
+2èð
by‹1
;

122 *(
addr
+3èð
by‹0
;

124 *
addr
 = 
by‹0
;

125 *(
addr
+1èð
by‹1
;

126 *(
addr
+2èð
by‹2
;

127 *(
addr
+3èð
by‹3
;

130 
	}
}

133 
	#¥l™_»ad_four
(
addr
, 
’dŸn
) \

134 ((
’dŸn
) ? \

135 (
ušt32_t
)((*(
addr
) << 24) | (*(addr+1) << 16) | (*(addr+2) << 8) | (*(addr+3))) : \

136 (
ušt32_t
)((*(
addr
)è| (*×ddr+1è<< 8è| (*×ddr+2è<< 16è| (*×ddr+3è<< 24)))

	)

138 
	#sw­
(
a
, 
b
) do { \

139 
št32_t
 
_tmp
 = (
a
); \

140 (
a
èð(
b
); \

141 (
b
èð
_tmp
; \

142 } 0)

	)

	@types.h

10 #iâdeà
_TYPES_H


11 
	#_TYPES_H


	)

14 
	tBOOLEAN
;

15 
	tINT8U
;

16 sigÃd 
	tINT8S
;

17 
	tINT16U
;

18 sigÃd 
	tINT16S
;

19 
	tINT32U
;

20 sigÃd 
	tINT32S
;

21 
	tFP32
;

22 
	tFP64
;

24 
	tINT64S
;

25 
	tINT64U
;

28 
	tulÚg_t
;

29 
	tušt32_t
;

30 
	tušt16_t
;

31 
	tušt8_t
;

34 
	tlÚg_t
;

35 
	tšt32_t
;

36 
	tšt16_t
;

37 sigÃd 
	tšt8_t
;

40 
	#htÚs
(
n
è((
ušt16_t
)((Òè& 0xffè<< 8è| ((Òè& 0xff00è>> 8))

	)

41 
	#htÚl
(
n
è((
ušt32_t
)( \

42 (((
ušt32_t
)(
n
) & (uint32_t)0x000000ffUL) << 24) | \

43 (((
ušt32_t
)(
n
) & (uint32_t)0x0000ff00UL) << 8) | \

44 (((
ušt32_t
)(
n
) & (uint32_t)0x00ff0000UL) >> 8) | \

45 (((
ušt32_t
)(
n
è& (ušt32_t)0xff000000ULè>> 24)))

	)

46 
	#Áohs
(
n
è
	`htÚs
Ò)

	)

47 
	#Áohl
(
n
è
	`htÚl
Ò)

	)

50 
	#__i¤__


	)

51 
	#__¶c_wq__


	)

52 
	#__tmr__


	)

55 
	#DISPLAY_MSG
 0

	)

57 
	#DISABLE
 0

	)

58 
	#ENABLE
 1

	)

60 
	#MAX
(
a
,
b
è(×è>ð(bè? (aè: (b))

	)

61 
	#MIN
(
a
,
b
è(×è<ð(bè? (aè: (b))

	)

62 
	#US_SWAP
(
a
è(×èð(
INT16U
)(((INT16U)×è>> 8è| ((INT16U)×è<< 8)))

	)

63 
	#mod_ûžšg
(
a
, 
b
è((×è+ (bè- 1è/ (b))

	)

64 
	#mod_æoÜ
(
a
, 
b
è(×è/ (b))

	)

66 #iâdeà
NULL


67 
	#NULL
 0

	)

70 #iâdeà
TRUE


71 
	#TRUE
 (1 =ð1)

	)

74 #iâdeà
FALSE


75 
	#FALSE
 (!
TRUE
)

	)

78 #iâdeà
OK


79 
	#OK
 0

	)

82 #iâdeà
ERROR


83 
	#ERROR
 -1

	)

86 
__šlše__
 
	$¥l™_wr™e_two
(
ušt8_t
 *
addr
, 
ušt16_t
 
two
, ušt8_ˆ
’dŸn
)

88 
ušt8_t
 
by‹0
, 
by‹1
;

90 
by‹0
 = (
two
 & 0xff);

91 
by‹1
 = (
two
 & 0xff00) >> 8;

93 ià(
’dŸn
) {

94 *
addr
 = 
by‹1
;

95 *(
addr
+1èð
by‹0
;

97 *
addr
 = 
by‹0
;

98 *(
addr
+1èð
by‹1
;

102 
	}
}

104 
	#¥l™_»ad_two
(
addr
, 
’dŸn
) \

105 ((
’dŸn
) ? \

106 (
ušt16_t
)((*(
addr
) << 8) | (*(addr+1))) : \

107 (
ušt16_t
)((*(
addr
)è| (*×ddr+1è<< 8)))

	)

109 
__šlše__
 
	$¥l™_wr™e_four
(
ušt8_t
 *
addr
, 
ušt32_t
 
four
, ušt8_ˆ
’dŸn
)

111 
ušt8_t
 
by‹0
, 
by‹1
, 
by‹2
, 
by‹3
;

113 
by‹0
 = (
four
 & 0xff);

114 
by‹1
 = (
four
 & 0xff00) >> 8;

115 
by‹2
 = (
four
 & 0xff0000) >> 16;

116 
by‹3
 = (
four
 & 0xff000000) >> 24;

118 ià(
’dŸn
) {

119 *
addr
 = 
by‹3
;

120 *(
addr
+1èð
by‹2
;

121 *(
addr
+2èð
by‹1
;

122 *(
addr
+3èð
by‹0
;

124 *
addr
 = 
by‹0
;

125 *(
addr
+1èð
by‹1
;

126 *(
addr
+2èð
by‹2
;

127 *(
addr
+3èð
by‹3
;

130 
	}
}

133 
	#¥l™_»ad_four
(
addr
, 
’dŸn
) \

134 ((
’dŸn
) ? \

135 (
ušt32_t
)((*(
addr
) << 24) | (*(addr+1) << 16) | (*(addr+2) << 8) | (*(addr+3))) : \

136 (
ušt32_t
)((*(
addr
)è| (*×ddr+1è<< 8è| (*×ddr+2è<< 16è| (*×ddr+3è<< 24)))

	)

138 
	#sw­
(
a
, 
b
) do { \

139 
št32_t
 
_tmp
 = (
a
); \

140 (
a
èð(
b
); \

141 (
b
èð
_tmp
; \

142 } 0)

	)

	@
1
.
0
7
278
/home/tgni/workspace/alg/src/sort/bubblesort.c
/home/tgni/workspace/alg/src/sort/countingsort.c
/home/tgni/workspace/alg/src/sort/heapsort.c
/home/tgni/workspace/alg/src/sort/quicksort.c
/home/tgni/workspace/alg/src/sort/sort.c
/home/tgni/workspace/alg/src/sort/types.h
types.h
