cscope 15 $HOME/workspace/alg/src/sqList -q 0000000160 0000018704
	@/home/tgni/workspace/alg/src/sqList/LinkList.c

1 
	~<¡dio.h
>

2 
	~<¡dlib.h
>

3 
	~<time.h
>

5 
	#EËmTy³
 

	)

6 
	#FALSE
 0

	)

7 
	#TRUE
 1

	)

9 
	sLNode
 {

10 
EËmTy³
 
	md©a
;

11 
LNode
 *
	mÃxt
;

12 } 
	tLNode
, *
	tLškLi¡
;

14 
	sDNode
 {

15 
EËmTy³
 
	md©a
;

16 
DNode
 *
	m´iÜ
, *
	mÃxt
;

17 } 
	tDNode
, *
	tDLškLi¡
;

28 
	$__D–‘e
(
LškLi¡
 *
L
, 
EËmTy³
 
x
)

30 
LškLi¡
 
p
;

32 ià(*
L
 =ð
NULL
)

35 ià((*
L
)->
d©a
 =ð
x
) {

36 
p
 = *
L
;

37 *
L
 = (*L)->
Ãxt
;

38 
	`ä“
(
p
);

39 
	`__D–‘e
(
L
, 
x
);

41 
	`__D–‘e
(&(*
L
)->
Ãxt
, 
x
);

43 
	}
}

46 
LškLi¡
 
	$C»©e
(
Ä
)

48 
i
;

49 
LškLi¡
 
p
, 
L
;

51 
L
 = (
LškLi¡
)
	`m®loc
((
LNode
));

52 
L
->
d©a
 = 
	`¿nd
(è% 
Ä
;

53 
p
 = 
L
;

55 
i
 = 0; i < 
Ä
; ++i) {

56 
p
->
Ãxt
 = (
LškLi¡
)
	`m®loc
((
LNode
));

57 
p
 =…->
Ãxt
;

58 
p
->
d©a
 = 
	`¿nd
(è% 
Ä
;

61 
p
->
Ãxt
 = 
NULL
;

63  
L
;

64 
	}
}

66 
	$D–‘e
(
LškLi¡
 
L
, 
EËmTy³
 
x
)

68 
LNode
 *
p
 = 
L
->
Ãxt
, *
´e
 = L, *
q
;

70 
p
) {

71 ià(
p
->
d©a
 =ð
x
) {

72 
q
 = 
p
;

73 
p
 =…->
Ãxt
;

74 
´e
->
Ãxt
 = 
p
;

75 
	`ä“
(
q
);

77 
´e
 = 
p
;

78 
p
 =…->
Ãxt
;

81 
	}
}

83 
	$D–‘eXY
(
LškLi¡
 
L
, 
EËmTy³
 
x
, EËmTy³ 
y
)

85 
LNode
 *
p
 = 
L
->
Ãxt
, *
´e
 = L, *
q
;

87 
p
) {

88 ià(
p
->
d©a
 > 
x
 &&…->d©¨< 
y
) {

89 
q
 = 
p
;

90 
p
 =…->
Ãxt
;

91 
´e
->
Ãxt
 = 
p
;

92 
	`ä“
(
q
);

94 
´e
 = 
p
;

95 
p
 =…->
Ãxt
;

98 
	}
}

101 
	$D–‘eMš
(
LškLi¡
 
L
)

103 
LNode
 *
´e
 = 
L
, *
p
 =…»->
Ãxt
;

104 
LNode
 *
mš´e
 = 
´e
, *
mšp
 = 
p
;

106 
p
) {

107 ià(
p
->
d©a
 < 
mšp
->data) {

108 
mšp
 = 
p
;

109 
mš´e
 = 
´e
;

112 
´e
 = 
p
;

113 
p
 =…->
Ãxt
;

116 
mš´e
->
Ãxt
 = 
mšp
->next;

117 
	`ä“
(
mšp
);

120 
	}
}

123 
	$D–‘eDup
(
LškLi¡
 
L
)

125 
LNode
 *
´e
, *
p
;

127 ià(!(
´e
 = 
L
->
Ãxt
))

130 
p
 = 
´e
->
Ãxt
;

132 
p
) {

133 ià(
´e
->
d©a
 =ð
p
->data) {

134 
´e
->
Ãxt
 = 
p
->next;

135 
	`ä“
(
p
);

136 
p
 = 
´e
->
Ãxt
;

138 
´e
 = 
p
;

139 
p
 =…->
Ãxt
;

144 
	}
}

146 
	$Rev”£
(
LškLi¡
 
L
)

148 
LNode
 *
p
, *
r
;

150 
p
 = 
L
->
Ãxt
;

151 
L
->
Ãxt
 = 
NULL
;

153 
p
) {

154 
r
 = 
p
->
Ãxt
;

155 
p
->
Ãxt
 = 
L
->next;

156 
L
->
Ãxt
 = 
p
;

157 
p
 = 
r
;

161 
	}
}

164 
	$SÜt
(
LškLi¡
 
L
)

166 
LNode
 *
p
, *
r
, *
´e
;

168 
p
 = 
L
->
Ãxt
;

169 
r
 = 
p
->
Ãxt
;

170 
p
->
Ãxt
 = 
NULL
;

171 
p
 = 
r
;

173 
p
) {

174 
r
 = 
p
->
Ãxt
;

175 
´e
 = 
L
;

178 
´e
->
Ãxt
 &&…»->Ãxt->
d©a
 < 
p
->data)

179 
´e
 =…»->
Ãxt
;

181 
p
->
Ãxt
 = 
´e
->next;

182 
´e
->
Ãxt
 = 
p
;

184 
p
 = 
r
;

188 
	}
}

190 
LškLi¡
 
	$C»©e2
(
Ä
)

192 
i
;

193 
LškLi¡
 
p
, 
L
;

195 
L
 = (
LškLi¡
)
	`m®loc
((
LNode
));

196 
L
->
d©a
 = -1;

197 
p
 = 
L
;

199 
i
 = 0; i < 
Ä
; ++i) {

200 
p
->
Ãxt
 = (
LškLi¡
)
	`m®loc
((
LNode
));

201 
p
 =…->
Ãxt
;

202 
p
->
d©a
 = 
	`¿nd
(è% 
Ä
;

205 
p
->
Ãxt
 = 
NULL
;

207  
L
;

208 
	}
}

210 
LškLi¡
 
	$C»©e3
(
EËmTy³
 
A
[], 
Ä
)

212 
i
;

213 
LškLi¡
 
p
, 
L
;

215 
L
 = (
LškLi¡
)
	`m®loc
((
LNode
));

216 
L
->
d©a
 = -1;

217 
p
 = 
L
;

219 
i
 = 0; i < 
Ä
; ++i) {

220 
p
->
Ãxt
 = (
LškLi¡
)
	`m®loc
((
LNode
));

221 
p
 =…->
Ãxt
;

222 
p
->
d©a
 = 
A
[
i
];

225 
p
->
Ãxt
 = 
NULL
;

227  
L
;

229 
	}
}

231 
	$PrštRev”£
(
LškLi¡
 
L
)

233 ià(
L
->
Ãxt
) {

234 
	`PrštRev”£
(
L
->
Ãxt
);

236 
	`´štf
("%d ", 
L
->
d©a
);

237 
	}
}

241 
	$PrštLi¡
(
LškLi¡
 
L
)

243 
L
) {

244 
	`´štf
("%d ", 
L
->
d©a
);

245 
L
 = L->
Ãxt
;

247 
	`´štf
("\n");

248 
	}
}

250 
LškLi¡
 
	$S¶™
(
LškLi¡
 
A
)

252 
LškLi¡
 
B
;

253 
LNode
 *
p
, *
r1
 = 
A
, *
r2
;

254 
i
 = 0;

256 
B
 = (
LškLi¡
)
	`m®loc
((
LNode
));

257 
B
->
d©a
 = -1;

258 
r2
 = 
B
;

260 
p
 = 
A
->
Ãxt
;

261 
p
) {

262 ià(++
i
 % 2 != 0) {

263 
r1
->
Ãxt
 = 
p
;

264 
r1
 =„1->
Ãxt
;

266 
r2
->
Ãxt
 = 
p
;

267 
r2
 =„2->
Ãxt
;

269 
p
 =…->
Ãxt
;

272 
r1
->
Ãxt
 = 
NULL
;

273 
r2
->
Ãxt
 = 
NULL
;

275  
B
;

276 
	}
}

279 
LškLi¡
 
	$M”ge
(
LškLi¡
 
A
, LškLi¡ 
B
)

281 
LškLi¡
 
R
;

282 
LNode
 *
p
, *
q
, *
r
;

284 
R
 = (
LškLi¡
)
	`m®loc
((
LNode
));

285 
R
->
d©a
 = -1;

286 
R
->
Ãxt
 = 
NULL
;

288 
p
 = 
A
->
Ãxt
;

289 
q
 = 
B
->
Ãxt
;

291 
p
 && 
q
) {

292 ià(
p
->
d©a
 < 
q
->data) {

293 
r
 = 
p
->
Ãxt
;

294 
p
->
Ãxt
 = 
R
->next;

295 
R
->
Ãxt
 = 
p
;

296 
p
 = 
r
;

298 
r
 = 
q
->
Ãxt
;

299 
q
->
Ãxt
 = 
R
->next;

300 
R
->
Ãxt
 = 
q
;

301 
q
 = 
r
;

305 
p
 = (
q
) ? q :…;

307 
p
) {

308 
r
 = 
p
->
Ãxt
;

309 
p
->
Ãxt
 = 
R
->next;

310 
R
->
Ãxt
 = 
p
;

311 
p
 = 
r
;

314 
	`ä“
(
A
);

315 
	`ä“
(
B
);

317  
R
;

318 
	}
}

321 
LškLi¡
 
	$Comm
(
LškLi¡
 
A
, LškLi¡ 
B
)

323 
LškLi¡
 
C
;

324 
LNode
 *
p
, *
q
, *
r
;

326 
C
 = (
LškLi¡
)
	`m®loc
((
LNode
));

327 
C
->
d©a
 = -1;

328 
C
->
Ãxt
 = 
NULL
;

330 
p
 = 
A
->
Ãxt
;

331 
q
 = 
B
->
Ãxt
;

333 
p
 && 
q
) {

334 ià(
p
->
d©a
 =ð
q
->data) {

335 
r
 = (
LNode
 *)
	`m®loc
((LNode));

336 
r
->
d©a
 = 
p
->data;

337 
r
->
Ãxt
 = 
C
->next;

338 
C
->
Ãxt
 = 
r
;

339 
p
 =…->
Ãxt
;

340 
q
 = q->
Ãxt
;

341 } ià(
p
->
d©a
 > 
q
->data) {

342 
q
 = q->
Ãxt
;

344 
p
 =…->
Ãxt
;

348 ià(!
C
->
Ãxt
) {

349 
	`ä“
(
C
);

350  
NULL
;

356  
C
;

357 
	}
}

360 
	$UniÚ
(
LškLi¡
 
A
, LškLi¡ 
B
)

362 
LNode
 *
p
, *
q
, *
r
, *
t
;

364 
p
 = 
A
->
Ãxt
;

365 
q
 = 
B
->
Ãxt
;

366 
r
 = 
A
;

368 
A
->
Ãxt
 = 
NULL
;

369 
p
 && 
q
) {

370 ià(
p
->
d©a
 =ð
q
->data) {

371 
r
->
Ãxt
 = 
p
;

372 
r
 =„->
Ãxt
;

373 
p
 =…->
Ãxt
;

374 
t
 = 
q
;

375 
q
 = q->
Ãxt
;

376 } ià(
p
->
d©a
 > 
q
->data) {

377 
t
 = 
q
;

378 
q
 = q->
Ãxt
;

380 
t
 = 
p
;

381 
p
 =…->
Ãxt
;

383 
	`ä“
(
t
);

385 
r
->
Ãxt
 = 
NULL
;

386 
	`D–‘eDup
(
A
);

388 
p
) {

389 
t
 = 
p
;

390 
p
 =…->
Ãxt
;

391 
	`ä“
(
p
);

393 
q
) {

394 
t
 = 
q
;

395 
q
 = q->
Ãxt
;

396 
	`ä“
(
q
);

398 
	`ä“
(
B
);

401 
	}
}

403 
	$P©‹º
(
LškLi¡
 
A
, LškLi¡ 
B
)

405 
LNode
 *
p
, *
´e
, *
q
;

407 
´e
 = 
p
 = 
A
->
Ãxt
;

408 
q
 = 
B
->
Ãxt
;

410 
p
 && 
q
) {

411 ià(
p
->
d©a
 =ð
q
->data) {

412 
p
 =…->
Ãxt
;

413 
q
 = q->
Ãxt
;

415 
´e
 =…»->
Ãxt
;

416 
p
 = 
´e
;

417 
q
 = 
B
->
Ãxt
;

421  
q
 ? 
FALSE
 : 
TRUE
;

422 
	}
}

424 
DLškLi¡
 *
	$C»©eDLškLi¡
(
EËmTy³
 
A
[], 
Ä
)

427 
	}
}

430 
	$maš
()

433 
EËmTy³
 
A
[10] = {1, 6, 7, 4, 6, 8, 6, 7, 0, 10};

434 
EËmTy³
 
B
[3] = {6, 7, 8};

435 
LškLi¡
 
La
, 
Lb
;

437 
La
 = 
	`C»©e3
(
A
, 10);

438 
Lb
 = 
	`C»©e3
(
B
, 3);

453 
	`PrštLi¡
(
La
);

454 
	`PrštLi¡
(
Lb
);

455 
	`´štf
("B i % sub oàA.\n", 
	`P©‹º
(
La
, 
Lb
) ? "" : "not");

460 
	}
}

	@/home/tgni/workspace/alg/src/sqList/find_median.c

1 
	~<¡dio.h
>

2 
	~"ty³s.h
"

4 
	$fšd_medŸn
(
A
[], 
B
[], 
n
)

6 
mid_a
, 
low_a
, 
high_a
;

7 
mid_b
, 
low_b
, 
high_b
;

9 
low_a
 = 
low_b
 = 0;

10 
high_a
 = 
high_b
 = 
n
-1;

11 
mid_a
 = 
mid_b
 = (
low_a
 + 
high_a
) / 2;

13 
low_a
 <ð
high_a
 && 
low_b
 <ð
high_b
) {

14 ià(
A
[
mid_a
] =ð
B
[
mid_b
])

16 ià(
high_a
 =ð
low_a
)

19 ià(
A
[
mid_a
] < 
B
[
mid_b
]) {

20 
low_a
 = 
mid_a
 + 1;

21 
high_b
 = 
mid_b
 - 1;

23 
high_a
 = 
mid_a
 - 1;

24 
low_b
 = 
mid_b
 + 1;

27 
mid_a
 = (
low_a
 + 
high_a
) / 2;

28 
mid_b
 = (
low_b
 + 
high_b
) / 2;

31  
	`MIN
(
A
[
mid_a
], 
B
[
mid_b
]);

32 
	}
}

34 
	$fšd_medŸn_¡d
(
A
[], 
B
[], 
n
)

36 
Ï
, 
ma
, 
ha
;

37 
lb
, 
mb
, 
hb
;

39 
Ï
 = 
lb
 = 0;

40 
ha
 = 
hb
 = 
n
 - 1;

42 
Ï
 !ð
ha
 || 
lb
 !ð
hb
) {

43 
ma
 = (
Ï
 + 
ha
) / 2;

44 
mb
 = (
lb
 + 
hb
) / 2;

46 ià(
A
[
ma
] =ð
B
[
mb
])

47  
A
[
ma
];

49 ià(
A
[
ma
] < 
B
[
mb
]) {

50 ià((
Ï
 + 
ha
) % 2 == 0) {

51 
Ï
 = 
ma
;

52 
hb
 = 
mb
;

54 
Ï
 = 
ma
+1;

55 
hb
 = 
mb
;

58 ià((
lb
 + 
hb
) % 2 == 0) {

59 
ha
 = 
ma
;

60 
lb
 = 
mb
;

62 
ha
 = 
ma
;

63 
lb
 = 
mb
+1;

68  
	`MIN
(
A
[
Ï
], 
B
[
lb
]);

69 
	}
}

71 
	$maš
()

73 
A
[] = {11, 13, 14, 15, 17, 19};

74 
B
[] = {2, 4, 6, 8, 13, 20};

76 
	`´štf
("medŸÀi %d, %d\n", 
	`fšd_medŸn
(
A
, 
B
, 5), 
	`fšd_medŸn_¡d
(A, B, 6));

79 
	}
}

	@/home/tgni/workspace/alg/src/sqList/sqList.c

1 
	~<¡dio.h
>

2 
	~<¡dlib.h
>

3 
	~<time.h
>

5 
	#çl£
 (0)

	)

6 
	#Œue
 (1)

	)

8 
	tEËmTy³
;

9 
	tboÞ
;

11 
	#MaxSize
 50

	)

13 
EËmTy³
 
	md©a
[
MaxSize
];

14 
	mËngth
;

15 } 
	tSqLi¡
;

17 
	$In£¹SÜt
(
SqLi¡
 *
sq
)

19 
i
, 
j
, 
tmp
;

21 
i
 = 1; i < 
sq
->
Ëngth
; ++i) {

22 
tmp
 = 
sq
->
d©a
[
i
];

23 
j
 = 
i
; j > 0 && 
sq
->
d©a
[j - 1] > 
tmp
; j--)

24 
sq
->
d©a
[
j
] = sq->data[j - 1];

25 
sq
->
d©a
[
j
] = 
tmp
;

27 
	}
}

30 
boÞ
 
	$D–‘eMš
(
SqLi¡
 *
sq
, 
EËmTy³
 *
v®ue
)

32 
pos
 = 0, 
i
;

34 ià(
sq
->
Ëngth
 == 0)

35  
çl£
;

37 *
v®ue
 = 
sq
->
d©a
[0];

38 
i
 = 1; i < 
sq
->
Ëngth
; ++i) {

39 ià(*
v®ue
 > 
sq
->
d©a
[
i
]) {

40 *
v®ue
 = 
sq
->
d©a
[
i
];

41 
pos
 = 
i
;

44 
sq
->
d©a
[
pos
] = sq->d©a[sq->
Ëngth
 - 1];

45 --
sq
->
Ëngth
;

47  
Œue
;

48 
	}
}

50 
	$Rev”£
(
SqLi¡
 *
sq
)

52 
i
;

53 
EËmTy³
 
tmp
;

55 
i
 = 0; i < 
sq
->
Ëngth
/2; ++i) {

56 
tmp
 = 
sq
->
d©a
[
i
];

57 
sq
->
d©a
[
i
] = sq->d©a[sq->
Ëngth
-1-i];

58 
sq
->
d©a
[sq->
Ëngth
-1-
i
] = 
tmp
;

60 
	}
}

62 
	$D–‘eX
(
SqLi¡
 *
sq
, 
EËmTy³
 
x
)

64 
i
, 
k
 = 0;

66 
i
 = 0; i < 
sq
->
Ëngth
; ++i) {

67 ià(
sq
->
d©a
[
i
] !ð
x
) {

68 
sq
->
d©a
[
k
] = sq->d©a[
i
];

69 
k
++;

73 
sq
->
Ëngth
 = 
k
;

74 
	}
}

78 
boÞ
 
	$D–‘eST
(
SqLi¡
 *
sq
, 
EËmTy³
 
s
, EËmTy³ 
t
)

80 
i
, 
j
, 
Ën
;

82 ià(
s
 >ð
t
 || 
sq
->
Ëngth
 == 0)

83  
çl£
;

85 
i
 = 0; i < 
sq
->
Ëngth
 && sq->
d©a
[i] < 
s
; ++i)

87 ià(
i
 >ð
sq
->
Ëngth
)

88  
çl£
;

90 
j
 = 
i
; j < 
sq
->
Ëngth
 && sq->
d©a
[j] <ð
t
; ++j)

93 ++
j
; j < 
sq
->
Ëngth
; ++
i
, ++j)

94 
sq
->
d©a
[
i
] = sq->d©a[
j
];

95 
sq
->
Ëngth
 = 
i
;

97  
Œue
;

98 
	}
}

100 
boÞ
 
	$_D–‘eST
(
SqLi¡
 *
sq
, 
EËmTy³
 
s
, EËmTy³ 
t
)

102 
i
, 
k
 = 0;

104 ià(
s
 >ð
t
 || 
sq
->
Ëngth
 == 0)

105  
çl£
;

107 
i
 = 0; i < 
sq
->
Ëngth
; ++i) {

108 ià(
sq
->
d©a
[
i
] < 
s
 || sq->d©a[i] > 
t
) {

109 
sq
->
d©a
[
k
] = sq->d©a[
i
];

110 ++
k
;

113 
sq
->
Ëngth
 = 
k
;

115  
Œue
;

116 
	}
}

119 
boÞ
 
	$D–‘eDup
(
SqLi¡
 *
sq
)

121 
i
, 
j
;

123 ià(
sq
->
Ëngth
 == 0)

124  
çl£
;

126 
i
 = 0, 
j
 = 1; j < 
sq
->
Ëngth
; ++j) {

127 ià(
sq
->
d©a
[
i
] !ðsq->d©a[
j
])

128 
sq
->
d©a
[++
i
] = sq->d©a[
j
];

130 
sq
->
Ëngth
 = 
i
+1;

132  
Œue
;

133 
	}
}

136 
boÞ
 
	$Rev”£A¼ay
(
EËmTy³
 
A
[], 
size
, 
s
, 
e
)

138 
i
, 
mid
;

139 
EËmTy³
 
tmp
;

141 ià(
s
 >ð
e
 ||ƒ >ð
size
)

142  
çl£
;

150 
mid
 = (
s
+
e
)/2;

151 
i
 = 0; i < 
mid
-
s
; ++i) {

152 
tmp
 = 
A
[
s
+
i
];

153 
A
[
s
+
i
] = A[
e
-i];

154 
A
[
e
-
i
] = 
tmp
;

157  
Œue
;

158 
	}
}

161 
boÞ
 
	$M”ge
(
SqLi¡
 *
s
, SqLi¡ *
t
, SqLi¡ *
r
)

163 
i
 = 0, 
j
 = 0, 
k
 = 0;

165 ià(
s
->
Ëngth
 + 
t
->Ëngth > 
r
->length)

166  
çl£
;

168 
i
 < 
s
->
Ëngth
 && 
j
 < 
t
->length) {

169 ià(
s
->
d©a
[
i
] < 
t
->d©a[
j
]) {

170 
r
->
d©a
[
k
++] = 
s
->d©a[
i
++];

172 
r
->
d©a
[
k
++] = 
t
->d©a[
j
++];

176 
i
 < 
s
->
Ëngth
)

177 
r
->
d©a
[
k
++] = 
s
->d©a[
i
++];

178 
j
 < 
t
->
Ëngth
)

179 
r
->
d©a
[
k
++] = 
t
->d©a[
j
++];

180 
r
->
Ëngth
 = 
k
;

182  
Œue
;

183 
	}
}

185 
	$PrštSqLi¡
(
SqLi¡
 *
sq
)

187 
i
;

189 
	`´štf
("SqList: ");

190 
i
 = 0; i < 
sq
->
Ëngth
; ++i)

191 
	`´štf
(" %d", 
sq
->
d©a
[
i
]);

192 
	`´štf
("\n");

193 
	}
}

241 
	$fšd_maš_–em
(
A
[], 
n
)

243 
i
, 
j
;

244 
couÁ
;

245 
e
;

247 
i
 = 0; i < 
n
/2+1; ++i) {

248 
e
 = 
A
[
i
];

249 
couÁ
 = 1;

250 
j
 = 
i
+1; j < 
n
; ++j) {

251 ià(
e
 =ð
A
[
j
])

252 ++
couÁ
;

254 ià(
couÁ
 > 
n
/2)

255  
e
;

259 
	}
}

261 
	$fšd_maš_–em_dyÇmic
(
A
[], 
n
)

263 
i
, 
couÁ
, 
e
;

265 
e
 = 
A
[0];

266 
couÁ
 = 1;

267 
	`´štf
("e: %d, couÁ: %d\n", 
e
, 
couÁ
);

270 
i
 = 1; i < 
n
; ++i) {

271 ià(
e
 =ð
A
[
i
]) {

272 ++
couÁ
;

273 } ià(--
couÁ
 == 0) {

274 
e
 = 
A
[
i
];

275 ++
couÁ
;

277 
	`´štf
("e: %d, couÁ: %d\n", 
e
, 
couÁ
);

281 ià(
couÁ
 > 0) {

282 
i
 = 
couÁ
 = 0; i < 
n
; ++i) {

283 ià(
e
 =ð
A
[
i
])

284 ++
couÁ
;

286 ià(
couÁ
 > 
n
/2)

287  
e
;

291 
	}
}

293 
	$maš
()

295 
A
[] = {1, 1, 1, 1, 5, 5, 5, 5};

296 
B
[] = {0, 5, 5, 3, 5, 1, 5, 7};

297 
C
[] = {0, 1, 3, 5, 5, 5, 5, 5};

299 
	`´štf
("A: %d\n", 
	`fšd_maš_–em_dyÇmic
(
A
, 8));

300 
	`´štf
("B: %d\n", 
	`fšd_maš_–em_dyÇmic
(
B
, 8));

301 
	`´štf
("C: %d\n", 
	`fšd_maš_–em_dyÇmic
(
C
, 8));

307 
	}
}

	@/home/tgni/workspace/alg/src/sqList/types.h

10 #iâdeà
_TYPES_H


11 
	#_TYPES_H


	)

14 
	tBOOLEAN
;

15 
	tINT8U
;

16 sigÃd 
	tINT8S
;

17 
	tINT16U
;

18 sigÃd 
	tINT16S
;

19 
	tINT32U
;

20 sigÃd 
	tINT32S
;

21 
	tFP32
;

22 
	tFP64
;

24 
	tINT64S
;

25 
	tINT64U
;

28 
	tulÚg_t
;

29 
	tušt32_t
;

30 
	tušt16_t
;

31 
	tušt8_t
;

34 
	tlÚg_t
;

35 
	tšt32_t
;

36 
	tšt16_t
;

37 sigÃd 
	tšt8_t
;

40 
	#htÚs
(
n
è((
ušt16_t
)((Òè& 0xffè<< 8è| ((Òè& 0xff00è>> 8))

	)

41 
	#htÚl
(
n
è((
ušt32_t
)( \

42 (((
ušt32_t
)(
n
) & (uint32_t)0x000000ffUL) << 24) | \

43 (((
ušt32_t
)(
n
) & (uint32_t)0x0000ff00UL) << 8) | \

44 (((
ušt32_t
)(
n
) & (uint32_t)0x00ff0000UL) >> 8) | \

45 (((
ušt32_t
)(
n
è& (ušt32_t)0xff000000ULè>> 24)))

	)

46 
	#Áohs
(
n
è
	`htÚs
Ò)

	)

47 
	#Áohl
(
n
è
	`htÚl
Ò)

	)

50 
	#__i¤__


	)

51 
	#__¶c__


	)

52 
	#__tmr__


	)

54 
	#__PACKED
 
	`__©Œibu‹__
 ((
__·cked__
))

	)

55 
	#__LOCALBSS
 
	`__©Œibu‹__
 ((
	`£ùiÚ
(".d¿m0.bss")))

	)

56 
	#__LOCALDATA
 
	`__©Œibu‹__
 ((
	`£ùiÚ
(".d¿m0.d©a")))

	)

57 #iâdeà
XTENSA_LINUX_GCC


58 
	#__LOCALTEXT
 
	`__©Œibu‹__
 ((
	`£ùiÚ
(".œam0.‹xt"), 
	`rod©a_£ùiÚ
(".d¿m0.rod©a")))

	)

60 
	#__LOCALTEXT
 
	`__©Œibu‹__
 ((
	`£ùiÚ
(".œam0.‹xt")))

	)

64 
	#DISPLAY_MSG
 0

	)

66 
	#DISABLE
 0

	)

67 
	#ENABLE
 1

	)

69 
	#MAX
(
a
,
b
è(×è>ð(bè? (aè: (b))

	)

70 
	#MIN
(
a
,
b
è(×è<ð(bè? (aè: (b))

	)

71 
	#US_SWAP
(
a
è(×èð(
INT16U
)(((INT16U)×è>> 8è| ((INT16U)×è<< 8)))

	)

72 
	#mod_ûžšg
(
a
, 
b
è((×è+ (bè- 1è/ (b))

	)

73 
	#mod_æoÜ
(
a
, 
b
è(×è/ (b))

	)

75 #iâdeà
NULL


76 
	#NULL
 0

	)

79 #iâdeà
TRUE


80 
	#TRUE
 (1 =ð1)

	)

83 #iâdeà
FALSE


84 
	#FALSE
 (!
TRUE
)

	)

87 #iâdeà
OK


88 
	#OK
 0

	)

91 #iâdeà
ERROR


92 
	#ERROR
 -1

	)

95 
__šlše__
 
	$¥l™_wr™e_two
(
ušt8_t
 *
addr
, 
ušt16_t
 
two
, ušt8_ˆ
’dŸn
)

97 
ušt8_t
 
by‹0
, 
by‹1
;

99 
by‹0
 = (
two
 & 0xff);

100 
by‹1
 = (
two
 & 0xff00) >> 8;

102 ià(
’dŸn
) {

103 *
addr
 = 
by‹1
;

104 *(
addr
+1èð
by‹0
;

106 *
addr
 = 
by‹0
;

107 *(
addr
+1èð
by‹1
;

111 
	}
}

113 
	#¥l™_»ad_two
(
addr
, 
’dŸn
) \

114 ((
’dŸn
) ? \

115 (
ušt16_t
)((*(
addr
) << 8) | (*(addr+1))) : \

116 (
ušt16_t
)((*(
addr
)è| (*×ddr+1è<< 8)))

	)

118 
__šlše__
 
	$¥l™_wr™e_four
(
ušt8_t
 *
addr
, 
ušt32_t
 
four
, ušt8_ˆ
’dŸn
)

120 
ušt8_t
 
by‹0
, 
by‹1
, 
by‹2
, 
by‹3
;

122 
by‹0
 = (
four
 & 0xff);

123 
by‹1
 = (
four
 & 0xff00) >> 8;

124 
by‹2
 = (
four
 & 0xff0000) >> 16;

125 
by‹3
 = (
four
 & 0xff000000) >> 24;

127 ià(
’dŸn
) {

128 *
addr
 = 
by‹3
;

129 *(
addr
+1èð
by‹2
;

130 *(
addr
+2èð
by‹1
;

131 *(
addr
+3èð
by‹0
;

133 *
addr
 = 
by‹0
;

134 *(
addr
+1èð
by‹1
;

135 *(
addr
+2èð
by‹2
;

136 *(
addr
+3èð
by‹3
;

139 
	}
}

142 
	#¥l™_»ad_four
(
addr
, 
’dŸn
) \

143 ((
’dŸn
) ? \

144 (
ušt32_t
)((*(
addr
) << 24) | (*(addr+1) << 16) | (*(addr+2) << 8) | (*(addr+3))) : \

145 (
ušt32_t
)((*(
addr
)è| (*×ddr+1è<< 8è| (*×ddr+2è<< 16è| (*×ddr+3è<< 24)))

	)

	@types.h

10 #iâdeà
_TYPES_H


11 
	#_TYPES_H


	)

14 
	tBOOLEAN
;

15 
	tINT8U
;

16 sigÃd 
	tINT8S
;

17 
	tINT16U
;

18 sigÃd 
	tINT16S
;

19 
	tINT32U
;

20 sigÃd 
	tINT32S
;

21 
	tFP32
;

22 
	tFP64
;

24 
	tINT64S
;

25 
	tINT64U
;

28 
	tulÚg_t
;

29 
	tušt32_t
;

30 
	tušt16_t
;

31 
	tušt8_t
;

34 
	tlÚg_t
;

35 
	tšt32_t
;

36 
	tšt16_t
;

37 sigÃd 
	tšt8_t
;

40 
	#htÚs
(
n
è((
ušt16_t
)((Òè& 0xffè<< 8è| ((Òè& 0xff00è>> 8))

	)

41 
	#htÚl
(
n
è((
ušt32_t
)( \

42 (((
ušt32_t
)(
n
) & (uint32_t)0x000000ffUL) << 24) | \

43 (((
ušt32_t
)(
n
) & (uint32_t)0x0000ff00UL) << 8) | \

44 (((
ušt32_t
)(
n
) & (uint32_t)0x00ff0000UL) >> 8) | \

45 (((
ušt32_t
)(
n
è& (ušt32_t)0xff000000ULè>> 24)))

	)

46 
	#Áohs
(
n
è
	`htÚs
Ò)

	)

47 
	#Áohl
(
n
è
	`htÚl
Ò)

	)

50 
	#__i¤__


	)

51 
	#__¶c__


	)

52 
	#__tmr__


	)

54 
	#__PACKED
 
	`__©Œibu‹__
 ((
__·cked__
))

	)

55 
	#__LOCALBSS
 
	`__©Œibu‹__
 ((
	`£ùiÚ
(".d¿m0.bss")))

	)

56 
	#__LOCALDATA
 
	`__©Œibu‹__
 ((
	`£ùiÚ
(".d¿m0.d©a")))

	)

57 #iâdeà
XTENSA_LINUX_GCC


58 
	#__LOCALTEXT
 
	`__©Œibu‹__
 ((
	`£ùiÚ
(".œam0.‹xt"), 
	`rod©a_£ùiÚ
(".d¿m0.rod©a")))

	)

60 
	#__LOCALTEXT
 
	`__©Œibu‹__
 ((
	`£ùiÚ
(".œam0.‹xt")))

	)

64 
	#DISPLAY_MSG
 0

	)

66 
	#DISABLE
 0

	)

67 
	#ENABLE
 1

	)

69 
	#MAX
(
a
,
b
è(×è>ð(bè? (aè: (b))

	)

70 
	#MIN
(
a
,
b
è(×è<ð(bè? (aè: (b))

	)

71 
	#US_SWAP
(
a
è(×èð(
INT16U
)(((INT16U)×è>> 8è| ((INT16U)×è<< 8)))

	)

72 
	#mod_ûžšg
(
a
, 
b
è((×è+ (bè- 1è/ (b))

	)

73 
	#mod_æoÜ
(
a
, 
b
è(×è/ (b))

	)

75 #iâdeà
NULL


76 
	#NULL
 0

	)

79 #iâdeà
TRUE


80 
	#TRUE
 (1 =ð1)

	)

83 #iâdeà
FALSE


84 
	#FALSE
 (!
TRUE
)

	)

87 #iâdeà
OK


88 
	#OK
 0

	)

91 #iâdeà
ERROR


92 
	#ERROR
 -1

	)

95 
__šlše__
 
	$¥l™_wr™e_two
(
ušt8_t
 *
addr
, 
ušt16_t
 
two
, ušt8_ˆ
’dŸn
)

97 
ušt8_t
 
by‹0
, 
by‹1
;

99 
by‹0
 = (
two
 & 0xff);

100 
by‹1
 = (
two
 & 0xff00) >> 8;

102 ià(
’dŸn
) {

103 *
addr
 = 
by‹1
;

104 *(
addr
+1èð
by‹0
;

106 *
addr
 = 
by‹0
;

107 *(
addr
+1èð
by‹1
;

111 
	}
}

113 
	#¥l™_»ad_two
(
addr
, 
’dŸn
) \

114 ((
’dŸn
) ? \

115 (
ušt16_t
)((*(
addr
) << 8) | (*(addr+1))) : \

116 (
ušt16_t
)((*(
addr
)è| (*×ddr+1è<< 8)))

	)

118 
__šlše__
 
	$¥l™_wr™e_four
(
ušt8_t
 *
addr
, 
ušt32_t
 
four
, ušt8_ˆ
’dŸn
)

120 
ušt8_t
 
by‹0
, 
by‹1
, 
by‹2
, 
by‹3
;

122 
by‹0
 = (
four
 & 0xff);

123 
by‹1
 = (
four
 & 0xff00) >> 8;

124 
by‹2
 = (
four
 & 0xff0000) >> 16;

125 
by‹3
 = (
four
 & 0xff000000) >> 24;

127 ià(
’dŸn
) {

128 *
addr
 = 
by‹3
;

129 *(
addr
+1èð
by‹2
;

130 *(
addr
+2èð
by‹1
;

131 *(
addr
+3èð
by‹0
;

133 *
addr
 = 
by‹0
;

134 *(
addr
+1èð
by‹1
;

135 *(
addr
+2èð
by‹2
;

136 *(
addr
+3èð
by‹3
;

139 
	}
}

142 
	#¥l™_»ad_four
(
addr
, 
’dŸn
) \

143 ((
’dŸn
) ? \

144 (
ušt32_t
)((*(
addr
) << 24) | (*(addr+1) << 16) | (*(addr+2) << 8) | (*(addr+3))) : \

145 (
ušt32_t
)((*(
addr
)è| (*×ddr+1è<< 8è| (*×ddr+2è<< 16è| (*×ddr+3è<< 24)))

	)

	@
1
.
0
5
194
/home/tgni/workspace/alg/src/sqList/LinkList.c
/home/tgni/workspace/alg/src/sqList/find_median.c
/home/tgni/workspace/alg/src/sqList/sqList.c
/home/tgni/workspace/alg/src/sqList/types.h
types.h
